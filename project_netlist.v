
// Generated by Cadence Genus(TM) Synthesis Solution 17.22-s017_1
// Generated on: May 16 2025 17:16:47 IST (May 16 2025 11:46:47 UTC)

// Verification Directory fv/project 

module full_adder_20(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2;
  XOR3X1 g133__8780(.A (b), .B (cin), .C (a), .Y (sum));
  OAI21X2 g134__4296(.A0 (n_0), .A1 (n_1), .B0 (n_2), .Y (carry));
  NAND2X1 g135__3772(.A (a), .B (b), .Y (n_2));
  NOR2X1 g136__1474(.A (a), .B (b), .Y (n_1));
  INVXL g137(.A (cin), .Y (n_0));
endmodule

module full_adder_21(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2;
  OAI21X2 g103__4547(.A0 (n_2), .A1 (n_0), .B0 (n_1), .Y (carry));
  XNOR3X1 g104__9682(.A (b), .B (a), .C (n_0), .Y (sum));
  NOR2X1 g105__2683(.A (b), .B (a), .Y (n_2));
  NAND2XL g106__1309(.A (a), .B (b), .Y (n_1));
  CLKINVX2 g107(.A (cin), .Y (n_0));
endmodule

module full_adder_22(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8;
  OAI2BB1XL g102__6877(.A0N (b), .A1N (n_1), .B0 (n_6), .Y (carry));
  NAND2X4 g103__2900(.A (n_8), .B (n_7), .Y (sum));
  NAND2X2 g104__2391(.A (n_4), .B (cin), .Y (n_8));
  NAND2X2 g105__7675(.A (n_3), .B (n_5), .Y (n_7));
  OAI21XL g106__7118(.A0 (n_1), .A1 (b), .B0 (cin), .Y (n_6));
  INVX2 g107(.A (n_4), .Y (n_5));
  AOI22X2 g108__8757(.A0 (n_2), .A1 (a), .B0 (b), .B1 (n_0), .Y (n_4));
  INVX2 g109(.A (cin), .Y (n_3));
  INVX1 g111(.A (b), .Y (n_2));
  INVXL fopt(.A (n_0), .Y (n_1));
  CLKINVX3 fopt112(.A (a), .Y (n_0));
endmodule

module full_adder_23(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_2, n_4, n_6, n_7, n_16;
  NAND2BX1 g174__5953(.AN (n_6), .B (a), .Y (n_7));
  NOR2XL g177__5703(.A (b), .B (cin), .Y (n_6));
  DLY2X1 g179(.A (a), .Y (n_4));
  CLKINVX1 g183(.A (cin), .Y (n_2));
  CLKXOR2X1 g2__5266(.A (n_0), .B (n_4), .Y (sum));
  XNOR2XL g184__2250(.A (n_2), .B (b), .Y (n_0));
  NAND2X1 g2(.A (n_16), .B (n_7), .Y (carry));
  NAND2BX1 g3(.AN (n_2), .B (b), .Y (n_16));
endmodule

module full_adder_24(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9;
  NAND2X2 g255__6083(.A (n_5), .B (n_9), .Y (carry));
  MXI2XL g256__2703(.A (n_8), .B (n_7), .S0 (n_4), .Y (sum));
  NAND2X1 g257__5795(.A (a), .B (n_6), .Y (n_9));
  INVXL g258(.A (n_7), .Y (n_8));
  MXI2XL g259__7344(.A (n_3), .B (n_2), .S0 (b), .Y (n_7));
  NAND2BX1 g260__1840(.AN (b), .B (n_0), .Y (n_6));
  NAND2X2 g261__5019(.A (b), .B (n_1), .Y (n_5));
  BUFX2 g262(.A (a), .Y (n_4));
  CLKINVX1 g263(.A (n_2), .Y (n_3));
  CLKBUFX2 g264(.A (n_1), .Y (n_2));
  INVX1 g265(.A (n_0), .Y (n_1));
  INVX1 g266(.A (cin), .Y (n_0));
endmodule

module full_adder_25(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_1, n_2, n_3, n_4, n_5, n_6;
  NAND2X2 g173__1857(.A (n_4), .B (n_6), .Y (carry));
  OAI21X2 g174__9906(.A0 (b), .A1 (a), .B0 (cin), .Y (n_6));
  MXI2XL g176__8780(.A (n_3), .B (n_2), .S0 (b), .Y (n_5));
  NAND2X2 g177__4296(.A (b), .B (a), .Y (n_4));
  INVXL g178(.A (n_2), .Y (n_3));
  INVXL g179(.A (cin), .Y (n_2));
  BUFX2 fopt(.A (a), .Y (n_1));
  XNOR2XL g2__3772(.A (n_5), .B (n_1), .Y (sum));
endmodule

module full_adder_26(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_3, n_4, n_29;
  OAI22X2 g63__4547(.A0 (n_3), .A1 (n_0), .B0 (n_4), .B1 (cin), .Y
       (sum));
  INVX1 g65(.A (n_3), .Y (n_4));
  CLKXOR2X1 g66__2683(.A (a), .B (b), .Y (n_3));
  INVX2 g69(.A (cin), .Y (n_0));
  OAI2BB1X1 g2(.A0N (a), .A1N (b), .B0 (n_29), .Y (carry));
  OAI21XL g70(.A0 (a), .A1 (b), .B0 (cin), .Y (n_29));
endmodule

module full_adder_27(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0;
  AOI21X1 g29__2900(.A0 (b), .A1 (cin), .B0 (n_0), .Y (sum));
  NOR2XL g30__2391(.A (b), .B (cin), .Y (n_0));
  AND2X1 g31__7675(.A (b), .B (cin), .Y (carry));
endmodule

module full_adder_28(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHX1 g29__7118(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_29(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHX1 g31__8757(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_30(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_3, n_4, n_5, n_6, n_7, n_12;
  wire n_38, n_39, s1;
  CLKBUFX2 cdn_loop_breaker(.A (s1), .Y (n_12));
  NAND2X2 g32__1786(.A (n_6), .B (n_7), .Y (s1));
  NAND2X2 g33__5953(.A (b), .B (n_5), .Y (n_7));
  NAND2BX1 g34__5703(.AN (b), .B (a), .Y (n_6));
  CLKINVX2 g35(.A (a), .Y (n_5));
  NAND2X4 g36__7114(.A (n_3), .B (n_4), .Y (sum));
  NAND2X4 g37__5266(.A (n_12), .B (n_39), .Y (n_4));
  NAND2BX2 g38__2250(.AN (n_12), .B (cin), .Y (n_3));
  NAND2X4 g48__6083(.A (n_1), .B (n_0), .Y (carry));
  NAND2X1 g49__2703(.A (b), .B (a), .Y (n_1));
  NAND2X2 g50__5795(.A (n_38), .B (s1), .Y (n_0));
  INVX1 fopt(.A (n_39), .Y (n_38));
  INVX3 fopt55(.A (cin), .Y (n_39));
endmodule

module full_adder_31(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_3, n_4, n_5, n_10, n_16, n_17;
  wire n_22, s1;
  CLKBUFX2 cdn_loop_breaker(.A (s1), .Y (n_10));
  OAI22X4 g32__7344(.A0 (b), .A1 (n_22), .B0 (n_5), .B1 (a), .Y (s1));
  INVX1 g34(.A (b), .Y (n_5));
  NAND2X2 g35__1840(.A (n_3), .B (n_4), .Y (sum));
  NAND2X2 g36__5019(.A (n_10), .B (n_17), .Y (n_4));
  NAND2BX2 g37__1857(.AN (n_10), .B (cin), .Y (n_3));
  NAND2X2 g48__9906(.A (n_1), .B (n_0), .Y (carry));
  NAND2XL g49__8780(.A (a), .B (b), .Y (n_1));
  NAND2X2 g50__4296(.A (n_16), .B (s1), .Y (n_0));
  INVXL fopt(.A (n_17), .Y (n_16));
  INVX2 fopt51(.A (cin), .Y (n_17));
  CLKINVX4 fopt54(.A (a), .Y (n_22));
endmodule

module full_adder_32(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_5, n_13, n_15, s1;
  CLKBUFX2 cdn_loop_breaker(.A (s1), .Y (n_5));
  CLKXOR2X1 g29__3772(.A (b), .B (n_13), .Y (s1));
  OAI22X2 g32__1474(.A0 (n_5), .A1 (n_1), .B0 (n_0), .B1 (cin), .Y
       (sum));
  INVX2 g33(.A (cin), .Y (n_1));
  INVX1 g34(.A (n_5), .Y (n_0));
  AO22X1 g39__4547(.A0 (cin), .A1 (s1), .B0 (b), .B1 (n_13), .Y
       (carry));
  CLKINVX1 fopt40(.A (n_15), .Y (n_13));
  INVXL fopt41(.A (a), .Y (n_15));
endmodule

module full_adder_33(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, s1;
  INVXL g30(.A (s1), .Y (n_1));
  MXI2XL g45__9682(.A (n_0), .B (a), .S0 (b), .Y (s1));
  INVX1 g46(.A (a), .Y (n_0));
  MXI2XL g47__2683(.A (n_1), .B (s1), .S0 (cin), .Y (sum));
  AO22X1 g48__1309(.A0 (s1), .A1 (cin), .B0 (a), .B1 (b), .Y (carry));
endmodule

module full_adder_34(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHXL g29__6877(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_35(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHXL g29__2900(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_36(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  CLKXOR2X1 g17__2391(.A (b), .B (cin), .Y (sum));
endmodule

module half_adder_24(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_1, n_6;
  INVX1 g28(.A (n_1), .Y (carry));
  MXI2X1 g29__7675(.A (n_6), .B (a), .S0 (b), .Y (sum));
  NAND2X1 g30__7118(.A (a), .B (b), .Y (n_1));
  INVX1 fopt(.A (a), .Y (n_6));
endmodule

module half_adder_25(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_1;
  NOR2XL g26__8757(.A (n_1), .B (carry), .Y (sum));
  NOR2XL g27__1786(.A (a), .B (b), .Y (n_1));
  CLKAND2X2 g28__5953(.A (b), .B (a), .Y (carry));
endmodule

module half_adder_26(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_0, n_2;
  CLKBUFX2 cdn_loop_breaker(.A (a), .Y (n_2));
  CLKXOR2X1 g17__5703(.A (n_2), .B (b), .Y (sum));
  NOR2BX2 g14__7114(.AN (b), .B (n_0), .Y (carry));
  CLKINVX2 g15(.A (a), .Y (n_0));
endmodule

module full_adder(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3;
  OAI21X2 g167__5266(.A0 (n_0), .A1 (n_2), .B0 (n_1), .Y (carry));
  MXI2XL g168__2250(.A (n_0), .B (cin), .S0 (n_3), .Y (sum));
  CLKXOR2X1 g169__6083(.A (a), .B (b), .Y (n_3));
  NOR2X2 g170__2703(.A (b), .B (a), .Y (n_2));
  NAND2X2 g171__5795(.A (b), .B (a), .Y (n_1));
  CLKINVX2 g172(.A (cin), .Y (n_0));
endmodule

module full_adder_1(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  NAND2X4 g109__7344(.A (n_4), .B (n_7), .Y (carry));
  NAND2X2 g111__1840(.A (n_5), .B (cin), .Y (n_7));
  CLKXOR2X1 g112__5019(.A (a), .B (b), .Y (n_6));
  NAND2X2 g113__1857(.A (n_3), .B (n_2), .Y (n_5));
  NAND2X1 g114__9906(.A (a), .B (b), .Y (n_4));
  CLKINVX1 g116(.A (a), .Y (n_3));
  CLKINVX1 g117(.A (b), .Y (n_2));
  DLY2X1 fopt120(.A (cin), .Y (n_1));
  XOR2XL g2__8780(.A (n_1), .B (n_6), .Y (sum));
endmodule

module full_adder_2(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_1;
  AOI21X4 g31__4296(.A0 (b), .A1 (cin), .B0 (n_1), .Y (sum));
  NOR2X4 g32__3772(.A (b), .B (cin), .Y (n_1));
  CLKAND2X3 g33__1474(.A (b), .B (cin), .Y (carry));
endmodule

module full_adder_3(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10;
  NAND2X4 g100__4547(.A (n_4), .B (n_10), .Y (carry));
  OAI22X4 g101__9682(.A0 (n_2), .A1 (n_8), .B0 (n_9), .B1 (n_3), .Y
       (sum));
  NAND2X2 g102__2683(.A (n_5), .B (cin), .Y (n_10));
  CLKINVX2 g103(.A (n_8), .Y (n_9));
  NAND2X4 g104__1309(.A (n_6), .B (n_7), .Y (n_8));
  NAND2X2 g105__6877(.A (a), .B (n_0), .Y (n_7));
  NAND2X2 g106__2900(.A (n_1), .B (b), .Y (n_6));
  NAND2X2 g107__2391(.A (n_1), .B (n_0), .Y (n_5));
  NAND2X1 g108__7675(.A (a), .B (b), .Y (n_4));
  CLKINVX2 g109(.A (n_2), .Y (n_3));
  INVX2 g110(.A (cin), .Y (n_2));
  INVXL g111(.A (a), .Y (n_1));
  CLKINVX2 g112(.A (b), .Y (n_0));
endmodule

module full_adder_4(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0, n_1;
  OAI22X4 g17__7118(.A0 (n_1), .A1 (b), .B0 (a), .B1 (n_0), .Y (sum));
  INVX1 g18(.A (a), .Y (n_1));
  CLKINVX3 g19(.A (b), .Y (n_0));
endmodule

module half_adder_4(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  AOI2BB1X1 g26__8757(.A0N (b), .A1N (a), .B0 (carry), .Y (sum));
  CLKAND2X3 g27__1786(.A (b), .B (a), .Y (carry));
endmodule

module half_adder_5(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_2, n_7, n_8;
  AOI22X2 g26__5953(.A0 (n_2), .A1 (n_8), .B0 (a), .B1 (n_7), .Y (sum));
  CLKAND2X3 g27__5703(.A (a), .B (b), .Y (carry));
  INVX1 g29(.A (a), .Y (n_2));
  INVX2 fopt33(.A (n_8), .Y (n_7));
  CLKINVX2 fopt34(.A (b), .Y (n_8));
endmodule

module half_adder(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_1;
  AOI21X2 g28__7114(.A0 (a), .A1 (b), .B0 (n_1), .Y (sum));
  NOR2X1 g29__5266(.A (b), .B (a), .Y (n_1));
  CLKAND2X6 g30__2250(.A (b), .B (a), .Y (carry));
endmodule

module vedic_2x2(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, n_2, n_3, n_4, w1, w2;
  half_adder ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  CLKINVX6 g30(.A (n_4), .Y (w2));
  NAND2X8 g31__6083(.A (b[1]), .B (a[0]), .Y (n_4));
  CLKINVX4 g32(.A (n_3), .Y (w1));
  NAND2X8 g33__2703(.A (b[0]), .B (a[1]), .Y (n_3));
  AOI22X4 g47__5795(.A0 (n_2), .A1 (c1), .B0 (n_0), .B1 (n_1), .Y
       (p[2]));
  AND2XL g49__7344(.A (b[0]), .B (a[0]), .Y (p[0]));
  CLKINVX1 g50(.A (n_0), .Y (n_2));
  NAND2X4 g52__1840(.A (b[1]), .B (a[1]), .Y (n_0));
  CLKINVX3 g54(.A (c1), .Y (n_1));
  NOR2BX2 g2__5019(.AN (c1), .B (n_0), .Y (p[3]));
endmodule

module half_adder_1(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  wire n_1;
  AOI21X2 g26__1857(.A0 (a), .A1 (b), .B0 (n_1), .Y (sum));
  NOR2X1 g27__9906(.A (b), .B (a), .Y (n_1));
  CLKAND2X3 g28__8780(.A (b), .B (a), .Y (carry));
endmodule

module vedic_2x2_1(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, n_2, n_3, n_4, n_5, n_6;
  wire w1, w2;
  half_adder_1 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  NOR2X4 g30__4296(.A (n_4), .B (n_3), .Y (w2));
  NOR2X4 g31__3772(.A (n_5), .B (n_6), .Y (w1));
  CLKINVX3 g32(.A (b[0]), .Y (n_6));
  CLKINVX4 g33(.A (a[1]), .Y (n_5));
  CLKINVX4 g34(.A (a[0]), .Y (n_4));
  CLKINVX3 g35(.A (b[1]), .Y (n_3));
  AOI22X2 g47__1474(.A0 (n_2), .A1 (c1), .B0 (n_1), .B1 (n_0), .Y
       (p[2]));
  AND2X1 g48__4547(.A (n_2), .B (c1), .Y (p[3]));
  CLKINVX1 g50(.A (n_1), .Y (n_2));
  NAND2X1 g51__9682(.A (b[1]), .B (a[1]), .Y (n_1));
  INVX2 g54(.A (c1), .Y (n_0));
  AND2X1 g2__2683(.A (a[0]), .B (b[0]), .Y (p[0]));
endmodule

module half_adder_2(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__1309(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_2(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, w1, w2;
  half_adder_2 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g29__6877(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g30__2900(.A (b[0]), .B (a[1]), .Y (w1));
  OAI21X1 g49__2391(.A0 (n_0), .A1 (c1), .B0 (n_1), .Y (p[2]));
  NAND2XL g50__7675(.A (n_0), .B (c1), .Y (n_1));
  NAND2XL g51__7118(.A (b[1]), .B (a[1]), .Y (n_0));
  AND2X1 g52__8757(.A (b[0]), .B (a[0]), .Y (p[0]));
endmodule

module vedic_4x4(a, b, p);
  input [3:0] a, b;
  output [7:0] p;
  wire [3:0] a, b;
  wire [7:0] p;
  wire [3:0] p0;
  wire [3:0] p1;
  wire [3:0] p2;
  wire UNCONNECTED_HIER_Z, UNCONNECTED_HIER_Z0, c1, c2, c3, c4, c5, c6;
  wire c7;
  full_adder fa1(.a (p0[2]), .b (p1[1]), .cin (c1), .sum (p[2]), .carry
       (c2));
  full_adder_1 fa2(.a (p0[3]), .b (p1[2]), .cin (c2), .sum (p[3]),
       .carry (c3));
  full_adder_2 fa3(.a (UNCONNECTED_HIER_Z), .b (p1[3]), .cin (c3), .sum
       (p[4]), .carry (c4));
  full_adder_3 fa4(.a (p2[1]), .b (c4), .cin (c5), .sum (p[6]), .carry
       (c6));
  full_adder_4 fa5(.a (p2[2]), .b (c6), .cin (UNCONNECTED_HIER_Z0),
       .sum (p[7]), .carry (c7));
  half_adder_4 ha1(.a (p0[1]), .b (p1[0]), .sum (p[1]), .carry (c1));
  half_adder_5 ha2(.a (p2[0]), .b (p[4]), .sum (p[5]), .carry (c5));
  vedic_2x2 m0(a[1:0], b[1:0], {p0[3:1], p[0]});
  vedic_2x2_1 m1(a[3:2], b[1:0], p1);
  vedic_2x2_2 m2(a[1:0], b[3:2], p2);
endmodule

module full_adder_5(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFHX1 g2(.A (b), .B (a), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_6(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  wire n_0;
  XNOR2X1 g2__7114(.A (cin), .B (n_0), .Y (sum));
  XNOR2XL g34__5266(.A (b), .B (a), .Y (n_0));
endmodule

module half_adder_10(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__2250(.A (b), .B (a), .CO (carry), .S (sum));
endmodule

module half_adder_6(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__6083(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_4(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, w1, w2;
  half_adder_6 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g30__2703(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g31__5795(.A (b[0]), .B (a[1]), .Y (w1));
  ADDHX1 g45__7344(.A (n_0), .B (c1), .CO (p[3]), .S (p[2]));
  AND2X1 g46__1840(.A (b[0]), .B (a[0]), .Y (p[0]));
  AND2X1 g47__5019(.A (b[1]), .B (a[1]), .Y (n_0));
endmodule

module half_adder_7(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__1857(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_5(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, w1, w2;
  half_adder_7 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g29__9906(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g30__8780(.A (b[0]), .B (a[1]), .Y (w1));
  OAI21X1 g41__4296(.A0 (n_0), .A1 (c1), .B0 (n_1), .Y (p[2]));
  NAND2XL g42__3772(.A (n_0), .B (c1), .Y (n_1));
  NAND2XL g43__1474(.A (b[1]), .B (a[1]), .Y (n_0));
  AND2X1 g44__4547(.A (b[0]), .B (a[0]), .Y (p[0]));
endmodule

module vedic_4x4_1(a, b, p);
  input [3:0] a, b;
  output [7:0] p;
  wire [3:0] a, b;
  wire [7:0] p;
  wire [3:0] p0;
  wire [3:0] p1;
  wire c1, c2, c3;
  full_adder_5 fa1(.a (p0[2]), .b (p1[1]), .cin (c1), .sum (p[2]),
       .carry (c2));
  full_adder_6 fa2(.a (p0[3]), .b (p1[2]), .cin (c2), .sum (p[3]),
       .carry (c3));
  half_adder_10 ha1(.a (p0[1]), .b (p1[0]), .sum (p[1]), .carry (c1));
  vedic_2x2_4 m0(.a (a[1:0]), .b (b[1:0]), .p ({p0[3:1], p[0]}));
  vedic_2x2_5 m1(.a (a[3:2]), .b (b[1:0]), .p (p1));
endmodule

module full_adder_10(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFX1 g127__9682(.A (a), .B (b), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_11(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFX1 g103__2683(.A (b), .B (a), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_12(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHX1 g29__1309(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_13(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFXL g62__6877(.A (a), .B (b), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_14(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  CLKXOR2X1 g17__2900(.A (a), .B (b), .Y (sum));
endmodule

module half_adder_16(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__2391(.A (b), .B (a), .CO (carry), .S (sum));
endmodule

module half_adder_17(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__7675(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module half_adder_12(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__7118(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_8(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, w1, w2;
  half_adder_12 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g30__8757(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g31__1786(.A (b[0]), .B (a[1]), .Y (w1));
  ADDHX1 g45__5953(.A (n_0), .B (c1), .CO (p[3]), .S (p[2]));
  AND2X1 g46__5703(.A (b[0]), .B (a[0]), .Y (p[0]));
  AND2X1 g47__7114(.A (b[1]), .B (a[1]), .Y (n_0));
endmodule

module half_adder_13(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__5266(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_9(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, w1, w2;
  half_adder_13 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g30__2250(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g31__6083(.A (b[0]), .B (a[1]), .Y (w1));
  ADDHX1 g45__2703(.A (n_0), .B (c1), .CO (p[3]), .S (p[2]));
  AND2X1 g46__5795(.A (b[0]), .B (a[0]), .Y (p[0]));
  AND2X1 g47__7344(.A (b[1]), .B (a[1]), .Y (n_0));
endmodule

module half_adder_14(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__1840(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_10(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, w1, w2;
  half_adder_14 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g36__5019(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g37__1857(.A (b[0]), .B (a[1]), .Y (w1));
  OAI21X1 g56__9906(.A0 (n_0), .A1 (c1), .B0 (n_1), .Y (p[2]));
  NAND2XL g57__8780(.A (n_0), .B (c1), .Y (n_1));
  NAND2XL g58__4296(.A (b[1]), .B (a[1]), .Y (n_0));
  AND2X1 g59__3772(.A (b[0]), .B (a[0]), .Y (p[0]));
endmodule

module vedic_4x4_2(a, b, p);
  input [3:0] a, b;
  output [7:0] p;
  wire [3:0] a, b;
  wire [7:0] p;
  wire [3:0] p0;
  wire [3:0] p1;
  wire [3:0] p2;
  wire UNCONNECTED_HIER_Z1, UNCONNECTED_HIER_Z2, c1, c2, c3, c4, c5, c6;
  wire c7;
  full_adder_10 fa1(.a (p0[2]), .b (p1[1]), .cin (c1), .sum (p[2]),
       .carry (c2));
  full_adder_11 fa2(.a (p0[3]), .b (p1[2]), .cin (c2), .sum (p[3]),
       .carry (c3));
  full_adder_12 fa3(.a (UNCONNECTED_HIER_Z1), .b (p1[3]), .cin (c3),
       .sum (p[4]), .carry (c4));
  full_adder_13 fa4(.a (p2[1]), .b (c4), .cin (c5), .sum (p[6]), .carry
       (c6));
  full_adder_14 fa5(.a (p2[2]), .b (c6), .cin (UNCONNECTED_HIER_Z2),
       .sum (p[7]), .carry (c7));
  half_adder_16 ha1(.a (p0[1]), .b (p1[0]), .sum (p[1]), .carry (c1));
  half_adder_17 ha2(.a (p2[0]), .b (p[4]), .sum (p[5]), .carry (c5));
  vedic_2x2_8 m0(.a (a[1:0]), .b (b[1:0]), .p ({p0[3:1], p[0]}));
  vedic_2x2_9 m1(.a (a[3:2]), .b (b[1:0]), .p (p1));
  vedic_2x2_10 m2(.a (a[1:0]), .b (b[3:2]), .p (p2));
endmodule

module full_adder_15(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFX1 g90__1474(.A (a), .B (b), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_16(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFX1 g71__4547(.A (b), .B (a), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_17(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDHXL g29__9682(.A (b), .B (cin), .CO (carry), .S (sum));
endmodule

module full_adder_18(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  ADDFX1 g71__2683(.A (b), .B (a), .CI (cin), .CO (carry), .S (sum));
endmodule

module full_adder_19(a, b, cin, sum, carry);
  input a, b, cin;
  output sum, carry;
  wire a, b, cin;
  wire sum, carry;
  CLKXOR2X1 g17__1309(.A (a), .B (b), .Y (sum));
endmodule

module half_adder_22(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__6877(.A (b), .B (a), .CO (carry), .S (sum));
endmodule

module half_adder_23(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHXL g26__2900(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module half_adder_18(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__2391(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_12(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, w1, w2;
  half_adder_18 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g30__7675(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g31__7118(.A (b[0]), .B (a[1]), .Y (w1));
  ADDHX1 g45__8757(.A (n_0), .B (c1), .CO (p[3]), .S (p[2]));
  AND2X1 g46__1786(.A (b[0]), .B (a[0]), .Y (p[0]));
  AND2X1 g47__5953(.A (b[1]), .B (a[1]), .Y (n_0));
endmodule

module half_adder_19(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHX1 g26__5703(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_13(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, w1, w2;
  half_adder_19 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g30__7114(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g31__5266(.A (b[0]), .B (a[1]), .Y (w1));
  ADDHXL g45__2250(.A (n_0), .B (c1), .CO (p[3]), .S (p[2]));
  AND2X1 g46__6083(.A (b[0]), .B (a[0]), .Y (p[0]));
  AND2X1 g47__2703(.A (b[1]), .B (a[1]), .Y (n_0));
endmodule

module half_adder_20(a, b, sum, carry);
  input a, b;
  output sum, carry;
  wire a, b;
  wire sum, carry;
  ADDHXL g26__5795(.A (a), .B (b), .CO (carry), .S (sum));
endmodule

module vedic_2x2_14(a, b, p);
  input [1:0] a, b;
  output [3:0] p;
  wire [1:0] a, b;
  wire [3:0] p;
  wire c1, n_0, n_1, w1, w2;
  half_adder_20 ha1(.a (w1), .b (w2), .sum (p[1]), .carry (c1));
  AND2X1 g36__7344(.A (b[1]), .B (a[0]), .Y (w2));
  AND2X1 g37__1840(.A (b[0]), .B (a[1]), .Y (w1));
  OAI21XL g56__5019(.A0 (c1), .A1 (n_0), .B0 (n_1), .Y (p[2]));
  NAND2XL g57__1857(.A (n_0), .B (c1), .Y (n_1));
  NAND2XL g58__9906(.A (b[1]), .B (a[1]), .Y (n_0));
  AND2X1 g59__8780(.A (b[0]), .B (a[0]), .Y (p[0]));
endmodule

module vedic_4x4_3(a, b, p);
  input [3:0] a, b;
  output [7:0] p;
  wire [3:0] a, b;
  wire [7:0] p;
  wire [3:0] p0;
  wire [3:0] p1;
  wire [3:0] p2;
  wire UNCONNECTED_HIER_Z3, UNCONNECTED_HIER_Z4, c1, c2, c3, c4, c5, c6;
  wire c7;
  full_adder_15 fa1(.a (p0[2]), .b (p1[1]), .cin (c1), .sum (p[2]),
       .carry (c2));
  full_adder_16 fa2(.a (p0[3]), .b (p1[2]), .cin (c2), .sum (p[3]),
       .carry (c3));
  full_adder_17 fa3(.a (UNCONNECTED_HIER_Z3), .b (p1[3]), .cin (c3),
       .sum (p[4]), .carry (c4));
  full_adder_18 fa4(.a (p2[1]), .b (c4), .cin (c5), .sum (p[6]), .carry
       (c6));
  full_adder_19 fa5(.a (p2[2]), .b (c6), .cin (UNCONNECTED_HIER_Z4),
       .sum (p[7]), .carry (c7));
  half_adder_22 ha1(.a (p0[1]), .b (p1[0]), .sum (p[1]), .carry (c1));
  half_adder_23 ha2(.a (p2[0]), .b (p[4]), .sum (p[5]), .carry (c5));
  vedic_2x2_12 m0(.a (a[1:0]), .b (b[1:0]), .p ({p0[3:1], p[0]}));
  vedic_2x2_13 m1(.a (a[3:2]), .b (b[1:0]), .p (p1));
  vedic_2x2_14 m2(.a (a[1:0]), .b (b[3:2]), .p (p2));
endmodule

module vedic_8x8_comb(a, b, p);
  input [7:0] a, b;
  output [15:0] p;
  wire [7:0] a, b;
  wire [15:0] p;
  wire [7:0] p0;
  wire [7:0] p1;
  wire [15:0] sum1;
  wire [7:0] p2;
  wire [7:0] p3;
  wire UNCONNECTED_HIER_Z5, UNCONNECTED_HIER_Z6, UNCONNECTED_HIER_Z7,
       UNCONNECTED_HIER_Z8, UNCONNECTED_HIER_Z9, UNCONNECTED_HIER_Z10,
       UNCONNECTED_HIER_Z11, UNCONNECTED_HIER_Z12;
  wire c1_0, c1_1, c1_2, c2_0, c2_1, c2_2, c2_3, c2_4;
  wire c2_5, c2_6, c3_0, c3_1, c3_2, c3_3, c3_4, c3_5;
  wire c3_6, c3_7;
  assign sum1[8] = 1'b0;
  assign p[12] = 1'b0;
  assign p[13] = 1'b0;
  assign p[14] = 1'b0;
  assign p[15] = 1'b0;
  full_adder_20 fa1_1(.a (p0[5]), .b (p1[1]), .cin (c1_0), .sum
       (sum1[5]), .carry (c1_1));
  full_adder_21 fa1_2(.a (p0[6]), .b (p1[2]), .cin (c1_1), .sum
       (sum1[6]), .carry (c1_2));
  full_adder_22 fa1_3(.a (p0[7]), .b (p1[3]), .cin (c1_2), .sum
       (sum1[7]), .carry (sum1[8]));
  full_adder_23 fa2_1(.a (sum1[5]), .b (p2[1]), .cin (c2_0), .sum
       (p[5]), .carry (c2_1));
  full_adder_24 fa2_2(.a (sum1[6]), .b (p2[2]), .cin (c2_1), .sum
       (p[6]), .carry (c2_2));
  full_adder_25 fa2_3(.a (sum1[7]), .b (p2[3]), .cin (c2_2), .sum
       (p[7]), .carry (c2_3));
  full_adder_26 fa2_4(.a (sum1[8]), .b (p2[4]), .cin (c2_3), .sum
       (p[8]), .carry (c2_4));
  full_adder_27 fa2_5(.a (UNCONNECTED_HIER_Z5), .b (p2[5]), .cin
       (c2_4), .sum (p[9]), .carry (c2_5));
  full_adder_28 fa2_6(.a (UNCONNECTED_HIER_Z6), .b (p2[6]), .cin
       (c2_5), .sum (p[10]), .carry (c2_6));
  full_adder_29 fa2_7(.a (UNCONNECTED_HIER_Z7), .b (p2[7]), .cin
       (c2_6), .sum (p[11]), .carry (p[12]));
  full_adder_30 fa3_1(.a (p[9]), .b (p3[1]), .cin (c3_0), .sum (p[9]),
       .carry (c3_1));
  full_adder_31 fa3_2(.a (p[10]), .b (p3[2]), .cin (c3_1), .sum
       (p[10]), .carry (c3_2));
  full_adder_32 fa3_3(.a (p[11]), .b (p3[3]), .cin (c3_2), .sum
       (p[11]), .carry (c3_3));
  full_adder_33 fa3_4(.a (p[12]), .b (p3[4]), .cin (c3_3), .sum
       (p[12]), .carry (c3_4));
  full_adder_34 fa3_5(.a (UNCONNECTED_HIER_Z8), .b (p3[5]), .cin
       (c3_4), .sum (p[13]), .carry (c3_5));
  full_adder_35 fa3_6(.a (UNCONNECTED_HIER_Z9), .b (p3[6]), .cin
       (c3_5), .sum (p[14]), .carry (c3_6));
  full_adder_36 fa3_7(.a (UNCONNECTED_HIER_Z10), .b (p3[7]), .cin
       (c3_6), .sum (p[15]), .carry (c3_7));
  half_adder_24 ha1_0(.a (p0[4]), .b (p1[0]), .sum (sum1[4]), .carry
       (c1_0));
  half_adder_25 ha2_0(.a (sum1[4]), .b (p2[0]), .sum (p[4]), .carry
       (c2_0));
  half_adder_26 ha3_0(.a (p[8]), .b (p3[0]), .sum (p[8]), .carry
       (c3_0));
  vedic_4x4 m0(a[3:0], b[3:0], {p0[7:4], p[3:0]});
  vedic_4x4_1 m1(a[7:4], {UNCONNECTED_HIER_Z12, UNCONNECTED_HIER_Z11,
       b[1:0]}, p1);
  vedic_4x4_2 m2(a[3:0], b[7:4], p2);
  vedic_4x4_3 m3(a[7:4], b[7:4], p3);
endmodule

module project(clk, a, b, p);
  input clk;
  input [7:0] a, b;
  output [15:0] p;
  wire clk;
  wire [7:0] a, b;
  wire [15:0] p;
  wire [15:0] product;
  wire UNCONNECTED;
  vedic_8x8_comb uut(.a (a), .b (b), .p (product));
  DFFQXL \p_reg[15] (.CK (clk), .D (product[15]), .Q (p[15]));
  DFFQXL \p_reg[14] (.CK (clk), .D (product[14]), .Q (p[14]));
  DFFQXL \p_reg[13] (.CK (clk), .D (product[13]), .Q (p[13]));
  DFFQXL \p_reg[12] (.CK (clk), .D (product[12]), .Q (p[12]));
  DFFHQX1 \p_reg[11] (.CK (clk), .D (product[11]), .Q (p[11]));
  DFFQXL \p_reg[9] (.CK (clk), .D (product[9]), .Q (p[9]));
  DFFQXL \p_reg[8] (.CK (clk), .D (product[8]), .Q (p[8]));
  DFFQXL \p_reg[7] (.CK (clk), .D (product[7]), .Q (p[7]));
  DFFQXL \p_reg[6] (.CK (clk), .D (product[6]), .Q (p[6]));
  DFFQXL \p_reg[5] (.CK (clk), .D (product[5]), .Q (p[5]));
  DFFQXL \p_reg[4] (.CK (clk), .D (product[4]), .Q (p[4]));
  DFFQXL \p_reg[3] (.CK (clk), .D (product[3]), .Q (p[3]));
  DFFQXL \p_reg[2] (.CK (clk), .D (product[2]), .Q (p[2]));
  DFFQXL \p_reg[1] (.CK (clk), .D (product[1]), .Q (p[1]));
  DFFQXL \p_reg[0] (.CK (clk), .D (product[0]), .Q (p[0]));
  DFFX2 \p_reg[10] (.CK (clk), .D (product[10]), .Q (p[10]), .QN
       (UNCONNECTED));
endmodule

